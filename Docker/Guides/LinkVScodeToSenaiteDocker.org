#+TITLE: SENAITE Docker Guide
#+AUTHOR: Niall Murphy
#+EMAIL: n.murphy@iaea.org
#+DATE: 2023-03-20
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS: [a4paper,11pt]
#+LATEX_HEADER: \usepackage[left=2cm, right=1.5cm, top=2cm, bottom=1cm]{geometry}
#+LATEX_HEADER: \usepackage[parfill]{parskip}
#+LATEX_HEADER: \setlength{\parindent}{0pt}

* Synopsis
You can develop Senaite LIMS using Visual Studio Code and a Docker Container of Senaite LIMS. To create a Docker container of Senaite LIMS see the [[https://github.com/RML-IAEA/LIMS_share/blob/fab9f4f5a527c26a2c0ecbe1883f2accd27d4eca/InstallGuideProduction/SLE-12-SP5/SENAITE-SLES-VM.org][guide]].Download and install Visual Studio Code form https://code.visualstudio.com/download. 

To get started (for Windows):
1. In Docker, ensure that in Docker WSL 2 back-end is enabled. Launch the Docker appicaiton and go to settings. Ensure the box is checked that enables "Use the WSL 2 based engine". 
[[https://github.com/RML-IAEA/LIMS_share/blob/main/Docker/Screenshots/usewsl2.png]]
2. In Docker, start your Senaite contianer by going to containers, finding your senaite container (e.g. senaite2x) and clicking the play button:
[[https://github.com/RML-IAEA/LIMS_share/blob/main/Docker/Screenshots/dockerinstance.png]]
3. Launch Visual Studio Code and select "Remote Explorer":
[[https://github.com/RML-IAEA/LIMS_share/blob/main/Docker/Screenshots/remoteexplorer.png]]
4. Select "Attach to Container" icon:
[[https://github.com/RML-IAEA/LIMS_share/blob/main/Docker/Screenshots/senaitecontainer.png]]
5. After you attach, the container you attach to is shown in the botton left corner of your Visual Studio Code interface:
[[https://github.com/RML-IAEA/LIMS_share/blob/main/Docker/Screenshots/senaitecontainer2.png]]
6. For the Visual Studio Code instance that is connected your container go to File --> Open Folder. 
7. The folder path is: 
	#+begin_src sh
	  /home/senaite/senaitelims/
	#+end_src
	
NOTE ☝: This Docker image contains the latest code and should not be used for
        production environments! 
NOTE ☝: The directories of the Docker image might be different to the directories in your production 
	environments!

It is aso helpfull to launch your Senaite Docker image in foreground mode. This will allow you to quicky reload your Senaite environment after you make changes to code. 

A guide on how to create a Senaite Image with reloading functionality is avaiable [[https://github.com/RML-IAEA/LIMS_share/blob/main/Docker/Guides/BuildSenaiteContainerDockerGuide.org
][here]].


NOTE ☝: Not all features can be reloaded using this feature and in some situations you might need to restart your container to reload!

